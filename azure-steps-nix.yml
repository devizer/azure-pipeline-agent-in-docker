# AGENT_OS=Linux|Darwin|Windows_NT

steps:

  - bash: |
      script=https://raw.githubusercontent.com/devizer/test-and-build/master/install-build-tools.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash;
      sudo apt-get update -qq; 
      sudo apt-get purge -qq man-db -y
      sudo apt-get install -y -qq qemu-user qemu-user-static
      script=https://raw.githubusercontent.com/devizer/test-and-build/master/lab/Install-DOCKER.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash;
      # PART 2: EXPERIMENTAL
        echo '
        {
          "experimental": true
        }
        ' | sudo tee /etc/docker/daemon.json
      sudo systemctl restart docker
      mkdir -p ~/.docker
      echo '
        {
          "experimental": "enabled"
        }
        ' | tee ~/.docker/config.json
      docker version

      # register
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      docker buildx create --use --name mybuild || true 
      # list builders
      Say "Builder INFO"
      docker buildx ls

      Say "Docker INFO"
      docker version || true
    displayName: 'Configure Docker'

  - bash: |
        list-packages || list-packages || true
    displayName: 'List Packages'

  - bash: |
      Say "Builder INFO"
      docker buildx ls

      Say "Docker INFO"
      docker version || true
    displayName: 'Show Docker INFO'

  - bash: |
      set -e
      mkdir -p Log
      
      cd cross-platform
      time docker build -t devizervlad/crossplatform-azure-pipelines-agent:latest . | tee Log/x64-build-image-log.log

      agentname="temp-$(uname -m)-agent"
      docker rm -f $agentname || true
      docker run -d --restart on-failure --privileged \
       --name $agentname \
       --hostname $agentname \
       -v /sys/fs/cgroup:/sys/fs/cgroup \
       -v /var/run/docker.sock:/var/run/docker.sock \
       devizervlad/crossplatform-azure-pipelines-agent:latest | tee Log/x64-install-agent.log

      docker exec -t $agentname bash -c '
       export VSTS_URL="https://devizer.visualstudio.com/";
       export VSTS_PAT='$VSTS_PAT';
       export VSTS_POOL=temp-pool;
       export VSTS_AGENT='$agentname'; 
       export VSTS_WORK=work;
       /pre-configure/config-agent.sh'

      docker exec -t $agentname bash -c "ls /var/run/docker.sock"
      docker exec -t $agentname bash -c "tree /var/run -h"
      docker exec -t $agentname bash -c "docker run -t --rm hello-world" | cat
    displayName: 'Build and test local x64 image'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.Repository.LocalPath)'
      artifactName: '$(Agent.JobName)-$(Build.BuildNumber)'
